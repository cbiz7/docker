# Pew pew test

version: "3.7"
services:

  nzbget:
    image: linuxserver/nzbget:latest
    container_name: nzbget
    hostname: nzbget
    ports:
      - "6789:6789"
    volumes:
      - ${CONFIG}/nzbget:/config
      - ${DOWNLOAD}:/downloads
      - ${DOWNLOAD}/incomplete:/incomplete-downloads
    environment:
      - PGID
      - PUID
      - TZ
    restart: unless-stopped
    networks:
      - internal

  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    hostname: sonarr
    dns:
      - "10.0.1.3"
      - "1.1.1.1"
    ports:
      - "8989:8989"
    volumes:
      - ${CONFIG}/sonarr:/config
      - ${DOWNLOAD}:/downloads
      - ${TVSHOWS}:/tv
    environment:
      - PGID
      - PUID
      - TZ
    restart: unless-stopped
    networks:
      - internal

  radarrhd:
    image: linuxserver/radarr:latest
    container_name: radarrhd
    hostname: radarrhd
    dns:
      - "10.0.1.3"
      - "1.1.1.1"
    ports:
      - "7878:7878"
    volumes:
      - ${CONFIG}/radarrhd:/config
      - ${DOWNLOAD}:/downloads
      - ${MOVIES}:/movies
    environment:
      - PGID
      - PUID
      - TZ
    restart: unless-stopped
    networks:
      - internal

  radarr-4k:
    image: linuxserver/radarr:latest
    container_name: radarr4k
    hostname: radarr4k
    dns:
      - "10.0.1.3"
      - "1.1.1.1"
    ports:
      - "7979:7878"
    volumes:
      - ${CONFIG}/radarr4k:/config
      - ${DOWNLOAD}:/downloads
      - ${MOVIES4K}:/movies
    environment:
      - PGID
      - PUID
      - TZ
    restart: unless-stopped
    networks:
      - internal

  # lidarr:
  #   image: linuxserver/lidarr:latest
  #   container_name: lidarr
  #   hostname: lidarr
  #   dns:
  #     - "10.0.1.3"
  #     - "1.1.1.1"
  #   ports:
  #     - "8686:8686"
  #   volumes:
  #     - ${CONFIG}/lidarr:/config
  #     - /etc/localtime:/etc/localtime:ro
  #     - ${DOWNLOAD}:/downloads
  #     - ${MUSIC}:/music
  #   environment:
  #     - PGID
  #     - PUID
  #   restart: unless-stopped
  #   networks:
  #     - internal

  bazarr:
    image: linuxserver/bazarr:latest
    container_name: bazarr
    dns:
      - "10.0.1.3"
      - "1.1.1.1"
    ports:
    - "6767:6767"
    volumes:
      - ${CONFIG}/bazarr:/config
      - ${TVSHOWS}:/tv
      - ${MOVIES}:/movies
    environment:
      - PGID
      - PUID
      - TZ
    restart: unless-stopped
    networks:
      - internal

  plex:
    image: linuxserver/plex:latest
    container_name: plex
    hostname: plex
    network_mode: host
    devices:
      - "/dev/dri:/dev/dri" # to enable hardware acceleration
    # ports: # Not needed because running net=host.
    #   - "32400:32400"
    #   - "32400:32400/udp"
    #   - "32469:32469"
    #   - "32469:32469/udp"
    #   - "1900:1900/udp"
    volumes:
      - ${CONFIG}/plex:/config
      - ${TVSHOWS}:/TV Shows
      - ${MOVIES}:/Movies
      - ${MOVIES4K}:/4K Movies
    environment:
      - PGID
      - PUID
      - TZ
      - VERSION=latest
    restart: unless-stopped

  tautulli:
    image: linuxserver/tautulli:latest
    container_name: tautulli
    hostname: tautulli
    ports:
      - "8181:8181"
    volumes:
      - ${CONFIG}/tautulli:/config
      - ${CONFIG}/plex/Library/Application Support/Plex Media Server/Logs:/logs:ro
    environment:
      - PGID
      - PUID
      - TZ
    restart: unless-stopped
    networks:
      - internal

  # ombi:
  #   image: linuxserver/ombi:latest
  #   container_name: ombi
  #   hostname: ombi
  #   dns:
  #     - "10.0.1.3"
  #     - "1.1.1.1"
  #   ports:
  #     - "3579:3579"
  #   volumes:
  #     - ${CONFIG}/ombi:/config
  #   environment:
  #     - PGID
  #     - PUID
  #     - TZ
  #   networks:
  #     - internal
  #     - web

  bookstack:
    image: ghcr.io/linuxserver/bookstack:latest
    container_name: bookstack
    hostname: bookstack
    ports:
      - "6875:80"
      - "6876:443"
    volumes:
      - ${CONFIG}/bookstack/data:/config
    environment:
      - PUID
      - PGID
      - TZ
      - APP_URL=http://10.0.1.11:6875
      - DB_HOST=bookstack-db
      - DB_USER=books
      - DB_PASS=books
      - DB_DATABASE=bookstack
    depends_on:
      - bookstack-db
    restart: unless-stopped
    networks:
      - internal
      - db

  bookstack-db:
    image: ghcr.io/linuxserver/mariadb:latest
    container_name: bookstack-db
    hostname: bookstack-db
    volumes:
      - ${CONFIG}/bookstack/db:/config
    environment:
      - PUID
      - PGID
      - TZ
      - MYSQL_USER=books
      - MYSQL_PASSWORD=books
      - MYSQL_DATABASE=bookstack
      - MYSQL_ROOT_PASSWORD=bijou
    restart: unless-stopped
    networks:
      - db

  calibre:
    image: linuxserver/calibre-web:latest
    container_name: calibre
    hostname: calibre
    ports:
      - "8083:8083"
    volumes:
      - ${CONFIG}/calibre:/config
      - ${BOOKS}:/books
    environment:
      - PUID
      - PGID
      - TZ
    restart: unless-stopped
    networks:
    - internal

  rtorrent: # wonderfall version
    image: wonderfall/rtorrent-flood:latest
    container_name: rtorrent
    hostname: rtorrent
    tty: true # Necessary or rtorrent will use 100% of CPU
    ports:
      - "3000:3000"
      - "51415:49184/udp"
      - "51415:49184/tcp"
    volumes:
      - ${CONFIG}/rtorrent:/flood-db
      - ${TORRENTS}:/data
    environment:
      - UID=1026 # Defined differently in container
      - GID=101 # Defined differently in container
      - TZ
      - FLOOD_SECRET=bijoubijoubijoubijoubijoubijou
      - DISABLE_AUTH=true
    networks:
      - internal

  # minecraft:
  #   image: itzg/minecraft-server:latest
  #   container_name: minecraft
  #   hostname: minecraft
  #   ports:
  #     - "25565:25565"
  #     - "25575:25575"
  #   volumes:
  #     - ${CONFIG}/minecraft:/data
  #   environment:
  #     - PUID
  #     - PGID
  #     - TZ
  #     - EULA=true
  #     - ENABLE_RCON=true
  #     - RCON_PASSWORD=bijou
  #     - RCON_PORT=25575
  #     - MEMORY=2G
  #     - LEVEL=world
  #     - TYPE=FABRIC
  #     - VERSION=1.14.4
  #     - FABRICVERSION=LATEST
  #     - SEED=600000222763165
  #     - MOTD=THUNDERDOME MOTHERFUCKERS
  #     - SERVER_NAME=THUNDERDOME
  #     # enable env variable replacement
  #     - REPLACE_ENV_VARIABLES=false
  #     # define an optional prefix for your env variables you want to replace
  #     - ENV_VARIABLE_PREFIX=CFG_
  #     # and here are the actual variables
  #   restart: unless-stopped
  #   networks:
  #     - internal
  #     - web

  overseerr:
    image: sctx/overseerr:latest
    container_name: overseerr
    hostname: overseerr
    ports:
      - 5055:5055
    volumes:
      - ${CONFIG}/overseerr:/app/config
    environment:
      - LOG_LEVEL=info
      - PUID
      - PGID
      - TZ
    restart: unless-stopped
    networks:
      - internal

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    hostname: jellyfin
    network_mode: host
    volumes:
      - ${CONFIG}/jellyfin/config:/config
      - ${CONFIG}/jellyfin/cache:/cache
      - ${TVSHOWS}:/TV Shows
      - ${MOVIES}:/Movies
      - ${MOVIES4K}:/4K Movies
    environment:
      - PGID
      - PUID
      - TZ
    restart: unless-stopped
    networks:
      - internal

networks:
  web:
    name: web
    external: true
  internal:
    name: internal
    external: false
  db: # for containers using databases
    name: db
    external: false
