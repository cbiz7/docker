version: "3.7"
services:

  # traefik:
  #   image: traefik:v1.7
  #   command: --web --docker --docker.watch --docker.domain=${DOMAIN} \
  #            --docker.exposedbydefault=false --acme.domains=${DOMAIN}
  #   container_name: traefik
  #   hostname: traefik
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #     - "8080:8080"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - ${CONFIG}/traefik/acme.json:/acme.json
  #     - ${CONFIG}/traefik/traefik.toml:/etc/traefik/traefik.toml
  #     # - ${CONFIG}/traefik/.htpasswd:/etc/traefik/.htpasswd:ro
  #   # labels:
  #   #   traefik.enable: "true"
  #   #   traefik.frontend.rule: "Host:monitor.${DOMAIN}"
  #   #   traefik.port: "8080"
  #   #   traefik.frontend.auth.basic: "${HTPASSWD}"
  #   networks:
  #     - internal
  #   restart: unless-stopped

  ouroboros:
    container_name: ouroboros
    hostname: ouroboros
    image: pyouroboros/ouroboros:latest
    environment:
      - CLEANUP=true
      - INTERVAL=300
      - LOG_LEVEL=info
      - SELF_UPDATE=true
      - IGNORE=influxdb mariadb
      - TZ
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    networks:
      - internal

  portainer:
    image: portainer/portainer:latest
    container_name: portainer
    hostname: portainer
    command: -H unix:///var/run/docker.sock
    ports:
    - "9000:9000"
    - "8000:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CONFIG}/portainer:/data
    restart: unless-stopped
    networks:
      - internal

  nzbget:
    image: linuxserver/nzbget:latest
    container_name: nzbget
    hostname: nzbget
    ports:
      - "6789:6789"
    volumes:
      - ${CONFIG}/nzbget:/config
      - ${DOWNLOAD}:/downloads
      - ${DOWNLOAD}/incomplete:/incomplete-downloads
    environment:
      - PGID
      - PUID
      - TZ
    # labels:
    #   traefik.enable: "true"
    #   traefik.port: "6789"
    #   traefik.frontend.rule: "Host:nzbget.${DOMAIN}"
    #   traefik.frontend.auth.basic: "${HTPASSWD}"
    restart: unless-stopped
    networks:
      - internal

  sonarr:
    image: linuxserver/sonarr:preview
    container_name: sonarr
    hostname: sonarr
    ports:
      - "8989:8989"
    volumes:
      - ${CONFIG}/sonarr:/config
      - ${DOWNLOAD}:/downloads
      - ${TVSHOWS}:/tv
    environment:
      - PGID
      - PUID
      - TZ
   # labels:
   #  traefik.enable: "true"
   #  traefik.port: "8989"
   #  traefik.frontend.rule: "Host:sonarr.${DOMAIN}"
   #  traefik.frontend.auth.basic: "${HTPASSWD}"
    restart: unless-stopped
    networks:
      - internal

  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    hostname: radarr
    ports:
      - "7878:7878"
    volumes:
      - ${CONFIG}/radarr:/config
      - ${DOWNLOAD}:/downloads
      - ${MOVIES}:/movies
    environment:
      - PGID
      - PUID
      - TZ
    # labels:
    #   traefik.enable: "true"
    #   traefik.port: "7878"
    #   traefik.frontend.rule: "Host:radarr.${DOMAIN}"
    #   traefik.frontend.auth.basic: "${HTPASSWD}"
    restart: unless-stopped
    networks:
      - internal

  lidarr:
    image: linuxserver/lidarr:latest
    container_name: lidarr
    hostname: lidarr
    ports:
      - "8686:8686"
    volumes:
      - ${CONFIG}/lidarr:/config
      - /etc/localtime:/etc/localtime:ro
      - ${DOWNLOAD}:/downloads
      - ${MUSIC}:/music
    environment:
      - PGID
      - PUID
    # labels:
    #   traefik.enable: "true"
    #   traefik.port: "8686"
    #   traefik.frontend.rule: "Host:lidarr.${DOMAIN}"
    #   traefik.frontend.auth.basic: "${HTPASSWD}"
    restart: unless-stopped
    networks:
      - internal

  bazarr:
    image: linuxserver/bazarr:latest
    container_name: bazarr
    ports:
    - "6767:6767"
    volumes:
      - ${CONFIG}/bazarr:/config
      - ${TVSHOWS}:/tv
      - ${MOVIES}:/movies
    #  - ${4KMOVIES}:/4kmovies
    environment:
      - PGID
      - PUID
      - TZ
    restart: unless-stopped
    networks:
      - internal

  nzbhydra2:
    image: linuxserver/hydra2:latest
    container_name: hydra2
    hostname: hydra2
    ports:
      - "5076:5076"
    volumes:
      - ${CONFIG}/hydra2:/config
      - ${DOWNLOAD}:/downloads
    environment:
      - PGID
      - PUID
      - TZ
    # labels:
    #   traefik.enable: "true"
    #   traefik.port: "5076"
    #   traefik.frontend.rule: "Host:nzbhydra.${DOMAIN}"
    #   traefik.frontend.auth.basic: "${HTPASSWD}"
    restart: unless-stopped
    networks:
      - internal

  # plex:
  #   image: linuxserver/plex
  #   container_name: plex
  #   hostname: plex
  #   ports:
  #     - "32400:32400"
  #     - "32400:32400/udp"
  #     - "32469:32469"
  #     - "32469:32469/udp"
  #     - "1900:1900/udp"
  #   volumes:
  #     - ${CONFIG}/plex:/config
  #     - ${DATA}/tv:/media/tv
  #     - ${DATA}/movies:/media/movies
  #     - ${DATA}/music:/media/music
  #   environment:
  #     - PGID
  #     - PUID
  #     - TZ
  #     - VERSION=latest
  #   # labels:
  #   #   traefik.enable: "true"
  #   #   traefik.port: "32400"
  #   #   traefik.frontend.rule: "Host:plex.${DOMAIN}"
  #   restart: unless-stopped
  # networks:
  # - internal
  # - web
  #
  tautulli:
    image: linuxserver/tautulli:latest
    container_name: tautulli
    hostname: tautulli
    ports:
      - "8181:8181"
    volumes:
      - ${CONFIG}/tautulli:/config
      - ${CONFIG}/plex/Library/Application Support/Plex Media Server/Logs:/logs:ro
    environment:
      - PGID
      - PUID
      - TZ
    # labels:
    #   traefik.enable: "true"
    #   traefik.port: "8181"
    #   traefik.frontend.rule: "Host:tautulli.${DOMAIN}"
    #   traefik.frontend.auth.basic: "${HTPASSWD}"
    restart: unless-stopped
    networks:
      - internal

  heimdall:
    image: linuxserver/heimdall:latest
    container_name: heimdall
    hostname: heimdall
    ports:
      - "5443:443"
      - "5080:80"
    volumes:
      - ${CONFIG}/heimdall:/config
    environment:
      - PGID
      - PUID
      - TZ
    # labels:
    #   traefik.enable: "true"
    #   traefik.port: "80"
    #   traefik.frontend.rule: "Host:${DOMAIN}"
    #   traefik.frontend.auth.basic: "${HTPASSWD}"
    restart: unless-stopped
    networks:
      - internal
      - web

  ombi:
    image: linuxserver/ombi:latest
    container_name: ombi
    hostname: ombi
    ports:
      - "3579:3579"
    volumes:
      - ${CONFIG}/ombi:/config
    environment:
      - PGID
      - PUID
      - TZ
    # labels:
    #   traefik.enable: "true"
    #   traefik.port: "3579"
    #   traefik.frontend.rule: "Host:ombi.${DOMAIN}"
    networks:
      - internal
      - web

  bookstack:
    image: linuxserver/bookstack:latest
    container_name: bookstack
    hostname: bookstack
    ports:
      - "6875:80"
      - "6876:443"
    volumes:
      - "${CONFIG}/bookstack:/config"
    environment:
      - PUID
      - PGID
      - TZ
      - DB_HOST=bookstack-db
      - DB_USER=books
      - DB_PASS=books
      - DB_DATABASE=bookstack
    depends_on:
      - bookstack-db
    restart: unless-stopped
    networks:
      - internal
      - db

  bookstack-db:
    image: linuxserver/mariadb:latest
    container_name: bookstack-db
    hostname: bookstack-db
    volumes:
      - "${CONFIG}/bookstack-db:/config"
    environment:
      - PUID
      - PGID
      - TZ
      - MYSQL_USER=books
      - MYSQL_PASSWORD=books
      - MYSQL_DATABASE=bookstack
      - MYSQL_ROOT_PASSWORD=bijou
    restart: unless-stopped
    networks:
      - internal
      - db

  calibre:
    image: linuxserver/calibre-web:latest
    container_name: calibre
    hostname: calibre
    ports:
      - "8083:8083"
    volumes:
      - "${CONFIG}/calibre:/config"
      - "${BOOKS}:/books"
    environment:
      - PUID
      - PGID
      - TZ
    restart: unless-stopped
    networks:
    - internal

  rtorrent:
    image: wonderfall/rtorrent-flood:latest
    container_name: rtorrent
    hostname: rtorrent
    tty: true # Necessary or rtorrent will use 100% of CPU
    ports:
      - "3000:3000"
      - "51415:49184/udp"
      - "51415:49184/tcp"
    volumes:
      - "${CONFIG}/rtorrent:/flood-db"
      - "${TORRENTS}:/data"
    environment:
      - UID=1026 # Defined differently in container
      - GID=101 # Defined diffrently in container
      - TZ
      - FLOOD_SECRET=bijou
    networks:
      - internal

  dashmachine:
    image: rmountjoy/dashmachine:latest
    container_name: dashmachine
    hostname: dashmachine
    ports:
      - "5050:5000"
    volumes:
      - "${CONFIG}/dashmachine:/dashmachine/dashmachine/user_data"
    environment:
      - PUID
      - PGID
      - TZ
    restart: unless-stopped
    networks:
      - internal

  # homer:
  #   image: nx211/docker-homer:latest
  #   container_name: homer
  #   hostname: homer
  #   ports:
  #     - "6080:80"
  #     - "6443:443"
  #   volumes:
  #   #- </path/to/appdata/config>:/config # optional for access to nginx config
  #     - ${CONFIG}/homer/config.yml:/homer/config.yml
  #   environment:
  #     - PUID
  #     - PGID
  #     - TZ
  #   restart: unless-stopped
  #   networks:
  #     - internal

networks:
  web:
    name: web
    external: true
  internal:
    name: internal
    external: false
  db: #for database using containers
    name: db
    external: false

# For Traefik 2.0
# volumes:
#   - ${CONFIG}/traefik/traefik.yml:/traefik.yml
#   - ${CONFIG}traefik/dynamic_conf.yml:/dynamic_conf.yml
